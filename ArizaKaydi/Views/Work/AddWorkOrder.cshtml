@model EntityLayer.Concrete.workOrder
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
	.description-textarea {
		min-height: 150px;
		resize: vertical;
		font-size: 14px;
		line-height: 1.5;
		padding: 10px;
		width: 100%;
		color: #333 !important;
		border: 1px solid #dc3545;
		border-radius: 0.75rem;
	}

		.description-textarea:focus {
			border-color: #dc3545;
			box-shadow: 0 0 0 0.2rem rgba(220,53,69,0.25);
			outline: none;
		}
</style>

<div class="card-header border-0">
	<h3 class="mb-0">İş Emri Ekle</h3>
</div>
<br />
@using (Html.BeginForm("AddWorkOrder", "Work", FormMethod.Post))
{
	@Html.AntiForgeryToken()
	<div class="col-12 grid-margin stretch-card">
		<div class="card">
			<div class="card-body">
				<h4 class="card-title">İş Emri Ekleme</h4>
				<p class="card-description"></p>

				@Html.Label("machineId", "Makine ID", htmlAttributes: new { @class = "custom-label" })
				@Html.DropDownListFor(x => x.machineId, ViewBag.MachineList as List<SelectListItem>, "Seçiniz", new { @class = "form-control custom-input-bg select2", id = "machineDropdown" })
				<br />
				@Html.Label("machinePartId", "Makine Parçası", htmlAttributes: new { @class = "custom-label" })
				<select id="partDropdown" name="machinePartId" class="form-control custom-input-bg select2">
					<option value="">Parça Seçiniz</option>
				</select>
				<br />
				@Html.Label("userId", "Atanacak Kullanıcı Seç", htmlAttributes: new { @class = "custom-label" })
				@Html.DropDownListFor(x => x.userId, ViewBag.UserList as List<SelectListItem>, "Seçiniz", new { @class = "form-control custom-input-bg select2", id = "userDropdown" })
				@Html.ValidationMessageFor(x => x.userId, "", new { @class = "text-danger" })
				<br />
				@Html.Label("title", "İş başlığı", htmlAttributes: new { @class = "custom-label" })
				@Html.TextBoxFor(x => x.title, new { @class = "form-control custom-input-bg" })
				@Html.ValidationMessageFor(x => x.title, "", new { @class = "text-danger" })
				<br />
				@Html.Label("desc", "İş açıklama", htmlAttributes: new { @class = "custom-label" })
				@Html.TextAreaFor(x => x.desc, new { @class = "form-control description-textarea", rows = "5", style = "width: 100%;" })
				@Html.ValidationMessageFor(x => x.desc, "", new { @class = "text-danger" })
				<br />
				<br />
				<div class="from-group">
					<button class="btn btn-success"> <i class="mdi mdi-content-save"></i>Kaydet</button>
					<a href="/Default/Index?selectedMachineId=@ViewBag.MachineId" class="btn btn-outline-danger">
						<i class="mdi mdi-close"></i> İptal
					</a>
				</div>
			</div>
		</div>
	</div>
}
@section Scripts {
	<script>
		$(document).ready(function () {
			console.log("aaaaaaaaaaaaa");
			$('.select2').select2({
				theme: 'bootstrap4',
				width: '100%',
				//dropdownParent: $('#filterForm'),
				placeholder: 'Seçiniz...',
				allowClear: true,
				minimumResultsForSearch: Infinity,
				language: {
					noResults: function() {
						return "Sonuç bulunamadı";
					}
				}
			});
			$('#machineDropdown').on('change', function () {
				console.log("Dropdown changed to: " + $(this).val());
				var machineId = $(this).val();
				$('#partDropdown').empty().append('<option value="">Yükleniyor...</option>');

				if (machineId) {
					$.ajax({
						url: '@Url.Action("GetMachineParts", "Work")',
						type: 'GET',
						data: { machineId: machineId },
						success: function (data) {
							$('#partDropdown').empty().append('<option value="">Parça Seçiniz</option>');
							$.each(data, function (i, item) {
								$('#partDropdown').append('<option value="' + item.value + '">' + item.text + '</option>');
							});
						},
						error: function (xhr, status, error) {
							console.error("AJAX Hatası: " + error);
							$('#partDropdown').empty().append('<option value="">Parça listesi yüklenemedi.</option>');
						}
					});
				} else {
					$('#partDropdown').empty().append('<option value="">Parça Seçiniz</option>');
				}
			});
		});
	</script>
}







