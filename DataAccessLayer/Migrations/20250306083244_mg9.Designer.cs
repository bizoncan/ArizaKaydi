// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(context))]
    [Migration("20250306083244_mg9")]
    partial class mg9
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Concrete.error", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("errorDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("errorDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("errorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("machineId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("machineId");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("EntityLayer.Concrete.machine", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("EntityLayer.Concrete.machineNotifications", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("machineId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("machineId");

                    b.ToTable("MachineNotifications");
                });

            modelBuilder.Entity("EntityLayer.Concrete.machinePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("machineId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("machineId");

                    b.ToTable("MachineParts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.error", b =>
                {
                    b.HasOne("EntityLayer.Concrete.machine", "machines")
                        .WithMany()
                        .HasForeignKey("machineId");

                    b.Navigation("machines");
                });

            modelBuilder.Entity("EntityLayer.Concrete.machineNotifications", b =>
                {
                    b.HasOne("EntityLayer.Concrete.machine", "machineName")
                        .WithMany()
                        .HasForeignKey("machineId");

                    b.Navigation("machineName");
                });

            modelBuilder.Entity("EntityLayer.Concrete.machinePart", b =>
                {
                    b.HasOne("EntityLayer.Concrete.machine", "machineName")
                        .WithMany()
                        .HasForeignKey("machineId");

                    b.Navigation("machineName");
                });
#pragma warning restore 612, 618
        }
    }
}
